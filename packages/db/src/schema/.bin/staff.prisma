model staff_class_role {
    id                 String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    staff_id           String               @db.Uuid
    session_class_id   String               @db.Uuid
    role               String?              @db.VarChar
    created_at         DateTime             @default(now()) @db.Timestamp(6)
    deleted_at         DateTime?            @db.Timestamp(6)
    updatedAt          DateTime?            @db.Timestamptz(6)
    session_class      session_class        @relation(fields: [session_class_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_class_role_session_class_id_session_class_id_fk")
    user               user                 @relation(fields: [staff_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_class_role_staff_id_user_id_fk")
    staff_subject_role staff_subject_role[]
}

model staff_service {
    id                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    school_id           String               @db.Uuid
    note                String?              @db.VarChar
    amount              Decimal?             @default(0) @db.Decimal
    staff_id            String               @db.Uuid
    service_id          String               @db.Uuid
    term_id             String               @db.Uuid
    staff_tx_id         String?              @db.Uuid
    created_at          DateTime             @default(now()) @db.Timestamp(6)
    deleted_at          DateTime?            @db.Timestamp(6)
    updatedAt           DateTime?            @db.Timestamptz(6)
    batch_service_id    String               @db.Uuid
    batch_staff_service batch_staff_service  @relation(fields: [batch_service_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_service_batch_service_id_batch_staff_service_id_fk")
    user                user                 @relation(fields: [staff_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_service_staff_id_user_id_fk")
    transaction         transaction?         @relation(fields: [staff_tx_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_service_staff_tx_id_transaction_id_fk")
    staff_service_cost  staff_service_cost[]
}

model staff_service_cost {
    id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    note             String?          @db.VarChar
    title            String?          @db.VarChar
    amount           Decimal?         @default(0) @db.Decimal
    staff_service_id String           @db.Uuid
    service_id       String           @db.Uuid
    created_at       DateTime         @default(now()) @db.Timestamp(6)
    deleted_at       DateTime?        @db.Timestamp(6)
    updatedAt        DateTime?        @db.Timestamptz(6)
    billable_service billable_service @relation(fields: [service_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_service_cost_service_id_billable_service_id_fk")
    staff_service    staff_service    @relation(fields: [staff_service_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_service_cost_staff_service_id_staff_service_id_fk")
}

model staff_session_form {
    id               String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    school_id        String           @db.Uuid
    staff_id         String           @db.Uuid
    session_id       String           @db.Uuid
    created_at       DateTime         @default(now()) @db.Timestamp(6)
    deleted_at       DateTime?        @db.Timestamp(6)
    updatedAt        DateTime?        @db.Timestamptz(6)
    school           school           @relation(fields: [school_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_session_form_school_id_school_id_fk")
    academic_session academic_session @relation(fields: [session_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_session_form_session_id_academic_session_id_fk")
    user             user             @relation(fields: [staff_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_session_form_staff_id_user_id_fk")

    @@unique([school_id, staff_id, session_id], map: "staff_session_form_school_id_staff_id_session_id_unique")
}

model staff_subject_role {
    id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    staff_class_role_id String           @db.Uuid
    role                String?          @db.VarChar
    created_at          DateTime         @default(now()) @db.Timestamp(6)
    deleted_at          DateTime?        @db.Timestamp(6)
    updatedAt           DateTime?        @db.Timestamptz(6)
    staff_class_role    staff_class_role @relation(fields: [staff_class_role_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_subject_role_staff_class_role_id_staff_class_role_id_fk")
}

model staff_term_sheet {
    id               String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    school_id        String        @db.Uuid
    staff_id         String        @db.Uuid
    session_sheet_id String        @db.Uuid
    academic_term_id String        @db.Uuid
    created_at       DateTime      @default(now()) @db.Timestamp(6)
    deleted_at       DateTime?     @db.Timestamp(6)
    updatedAt        DateTime?     @db.Timestamptz(6)
    school           school        @relation(fields: [school_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_term_sheet_school_id_school_id_fk")
    user             user          @relation(fields: [staff_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "staff_term_sheet_staff_id_user_id_fk")
    transaction      transaction[]
}
